apiVersion: config.kubernetes.io/v1
kind: ResourceList
items:
- apiVersion: traefik.containo.us/v1alpha1
  kind: IngressRoute
  metadata:
    name: echo-server-insecure
  spec:
    entryPoints:
      - web
    routes:
      - match: Host(`test.com`)
        kind: Rule
        services:
          - name: echo-server
            port: 80
      - match: Host(`test-secure.com`) && Path(`/vpn`)
        kind: Rule
        middlewares:
          - name: vpn-only
            namespace: traefik
        services:
          - name: echo-server
            port: 80
      - match: Host(`domain1.test.com`) || Host(`domain2.test.com`) && Path(`/somepath`)
        kind: Rule
        middlewares:
          - name: middleware1
            namespace: default
        priority: 10
        services:
          - name: foo
            namespace: default
            passHostHeader: true
            port: 80
            responseForwarding:
              flushInterval: 1ms
            scheme: https
            serversTransport: transport
            sticky:
              cookie:
                httpOnly: true
                name: cookie
                sameSite: none
                secure: true
            strategy: RoundRobin
            weight: 10
      - match: Host(`domain1.test.com`) || Host(`domain2.test.com`) && Path(`/somepath2`)
        kind: Rule
        middlewares:
          - name: middleware1
            namespace: default
        priority: 10
        services:
          - name: foo
            namespace: default
            passHostHeader: true
            port: 80
            responseForwarding:
              flushInterval: 1ms
            scheme: https
            serversTransport: transport
            sticky:
              cookie:
                httpOnly: true
                name: cookie
                sameSite: none
                secure: true
            strategy: RoundRobin
            weight: 10
    tls:
      secretName: echo-server-insecure-cert

functionConfig:
  apiVersion: v1
  kind: SetRoutes
  metadata:
    name: setroutes-fn-config
  data:
    app: testapp
    hosts:
    - domain1.test.com
    - domain2.test.com
    route:
      match: Path(`/test1`)
      kind: Rule
